package main

import (
	"fmt"
)

type MyStruct struct {
	Name string
	Age int
}

//TODO: support in the future
// @template(type T, type U, type X)
// func (m MyStruct) GetName() string {
// 	return m.Name
// }

@template(type T, type U, type X)
func example(input T, another U, yo X) (a X, b T) {
	fmt.Println(input)
	fmt.Println(another)

	return yo, input
}

@template(type A, type B)
func something(arg0 A, arg1 B) {
	fmt.Printf("%+v\n", arg1.Name)
}

@template(type N, type M)
func cool(num N, age N) (M, N) {
	return "hello world", age
}

func main() {
	test()
	cool<int, string>(15, 19)

	my := MyStruct{
		Name: "Bob",
		Age: 30,
	}

	something<string, *MyStruct>("hello world", &my)
}

func test() {
	example<string, error, *string>("yo", nil, nil)
	example<string, error, *string>("hello", nil, nil)
}